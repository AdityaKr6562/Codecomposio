#!/bin/bash

# Capture the directory where the script is located
script_dir=$(dirname "$0")
current_dir=$(pwd)


# Function to display usage instructions
show_usage() {
    echo "Usage: $0 <prediction_path_dir> <dataset_path_or_name>"
    echo "Example: $0 /path/to/prediction/dir /path/to/dataset/dir"
}
# Usage: ./complete_eval_workflow.sh <prediction_path_dir> <dataset_path_or_name>
if [ "$#" -lt 2 ]; then
    show_usage
    exit 1
fi

# Usage: ./complete_eval_workflow.sh <prediction_path_dir> <dataset_path_or_name>
prediction_path_dir=$1  #
dataset_path_or_name=$2
action=${3:-all}  # Default to running all steps if no specific action is provided
dataset_on_disk_path="$prediction_path_dir/dataset"
predictions_json_path="$prediction_path_dir/patches.json"
log_dir_path="$prediction_path_dir/logs"

show_banner() {
    # Banner displaying script usage
    echo "========================================"
    echo "Complete Evaluation Workflow Script"
    echo "Usage: $0 <prediction_path_dir> <dataset_path_or_name>"
    echo "Example: $0 /path/to/prediction/dir princeton-nlp/SWE-bench_Lite"
    echo "========================================"
}

# Generate related files
setup_test_bed() {
    cd "$script_dir"
    python ./setup_test_bed.py --prediction_path_dir "$prediction_path_dir" --dataset_path_or_name "$dataset_path_or_name"
    cd "$current_dir"
}


run_evaluation() {
    cd "$script_dir"
    echo "still brewing"
    # Save current directory and change to home directory
    pushd ~
   # Check if the SWE-bench-docker directory already exists
    if [ -d "SWE-bench-docker" ]; then
        echo "SWE-bench-docker already exists, pulling latest changes."
        cd ~/SWE-bench-docker
        git pull
    else
        # Clone the SWE-bench-docker repository
        git clone https://github.com/aorwall/SWE-bench-docker.git
        # Navigate into the cloned directory
        cd ~/SWE-bench-docker
    fi

    mkdir -p "$log_dir_path"
    # Run the evaluation
    python run_evaluation.py --predictions_path "$predictions_json_path" --log_dir "$log_dir_path" --swe_bench_tasks "$dataset_on_disk_path" --namespace aorwall --skip_existing
    popd
    cd "$current_dir"
}

generate_score_card() {
    cd "$script_dir"
    python ./get_score_card.py --log_dir "$log_dir_path" --prediction_path_dir "$prediction_path_dir" --swe_bench_path "$dataset_on_disk_path"
    cd "$current_dir"
}

main() {
    show_banner
    set -ex
    case "$action" in
        setup)
            setup_test_bed
            ;;
        evaluate)
            setup_test_bed
            run_evaluation
            ;;
        score)
            setup_test_bed
            generate_score_card
            ;;
        all)
            setup_test_bed
            run_evaluation
            generate_score_card
            ;;
        *)
            echo "Invalid action: $action"
            show_usage
            exit 1
            ;;
    esac
}

main

# Note: Replace <logs_dir_generated_by_run_evaluation> with the actual log directory path generated by the run_evaluation script.